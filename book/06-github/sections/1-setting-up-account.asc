=== Створення та налаштування облікового запису

(((GitHub, user accounts)))
Спершу вам треба створити безкоштовний обліковий запис.
Просто зайдіть до https://github.com[], оберіть ім’я користувача, якого ще ні в кого немає, надайте адресу електронної пошти та пароль, натисніть на велику зелену кнопку ``Sign up for Github'' (Зареєструватись на Github).

.Форма реєстрації GitHub.
image::images/signup.png[Форма реєстрації GitHub.]

Далі ви побачите сторінку з розцінками додаткових планів, проте зараз ми можемо це проігнорувати.
GitHub відправить вам листа щоб перевірити адресу, що ви надали.
Виконайте інструкції в листі - це доволі важливо (як ми потім побачимо).

[NOTE]
====
GitHub надає вам увесь свій функціонал безкоштовно, з обмеженням, що всі ваші проекти повністю публічні (усі мають доступ на читання).
Оплачувані плани пропонують фіксоване число приватних проектів, проте ми не будемо це розглядати в даній книзі.
====

Логотип Octocat зліва зверху проведе вас до вашої дошки керування.
Ви тепер готові використовувати GitHub.

==== SSH доступ

(((SSH keys, with GitHub)))
Наразі, ви здатні авторизуватися щойно створеними ім’ям та паролем та зв’язуватися з Git сховищами за допомогою протоколу `https://`.
Втім, щоб просто клонувати публічні проекти, вам не треба було навіть реєструватися - щойно створений обліковий запис стає в нагоді, коли ми будемо відокремлювати проекти та викладати до них зміни.

Якщо ви будете використовувати віддалені сховища через SSH, вам потрібно задати публічний ключ.
(Якщо у вас його нема, дивіться <<_generate_ssh_key>>.)
Відкрийте налаштування облікового запису (account settings) за допомогою посилання в правому верхньому куті вікна:

.Посилання на налаштування облікового запису (``Account settings'').
image::images/account-settings.png[Посилання на налаштування облікового запису (``Account settings'').]

Оберіть секцію ``SSH keys'' (SSH ключі) з лівого боку.

.Посилання ``SSH keys'' (SSH ключі).
image::images/ssh-keys.png[Посилання ``SSH keys'' (SSH ключі).]

Далі, натисніть кнопку ``Add an SSH key'' (додати SSH ключ), назвіть ваш ключ, та вставте вміст вашого файлу з публічним ключем `~/.ssh/id_rsa.pub` (якщо ви не змінювали назву) до текстового поля, та натисніть ``Add key'' (додати ключ).

[NOTE]
====
Обов’язково називайте свої SSH ключі розважливо.
Ви можете назвати кожен з ваших ключів (наприклад "Мій Ноутбук" чи "Машина на Роботі") так, щоб якщо ви захочете скасувати якийсь потім, ви легко могли знайти потрібний вам ключ.
====

[[_personal_avatar]]
==== Ваш аватар

Далі, якщо ви бажаєте, можете змінити згенерований аватар обраним вами зображенням.
Спершу перейдіть до вкладки ``Profile'' (профіль, над вкладкою SSH ключі) та натисніть ``Upload new picture'' (Відвантажити нове зображення).

.Посилання на ``Profile'' (профіль).
image::images/your-profile.png[Посилання на ``Profile'' (профіль).]

Ми оберемо копію логотипу Git, що вже є на нашому жорсткому диску та потім зможемо обрізати зображення.

.Обрізати ваш аватар
image::images/avatar-crop.png[Обрізати ваш аватар.]

Тепер всюди, де ви будете щось робити на сайті, інші побачать ваш аватар біля вашого імені.

Якщо ж ви відвантажили аватар до популярного сервісу Gravatar (часто використовується для облікових записів Wordpress), то аватар буде використано автоматично, і вам цей крок не потрібен.

==== Ваші поштові адреси

GitHub визначає, що ваші коміти до Git є вашими через поштову адресу.
Якщо ви використовуєте декілька електронних адрес для комітів, та бажаєте, щоб GitHub усіх їх пов’язував з вами, додайте всі адреси, що ви використовуєте до секції Emails в адміністративній секції.

[[_add_email_addresses]]
.Додавання електронних адрес
image::images/email-settings.png[Додавання електронних адрес.]

На <<_add_email_addresses>> ми можемо бачити декілька можливих станів адреси.
Верхня адреса перевірена та призначена головною, тобто до цієї адреси надсилають усі повідомлення та квитанції.
Друга адреса перевірена, отже ви можете її призначити головною, якщо забажаєте їх поміняти місцями.
Остання адреса не перевірена, отже ви не можете зробити її головною.
Якщо GitHub побачить будь-яку з цих адрес у повідомленні коміту в будь-якому сховищі на сайті, це повідомлення буде пов’язано з вашим користувачем.

==== Двокрокова авторизація

Нарешті, для більшої безпеки, вам безумовно слід налаштувати Дворокову Авторизацію чи ``2FA'' (Two-factor Authentication).
Двокрокова Авторизація - це механізм авторизації, що наразі стає все більш популярним задля зменшення ризиків крадіжки вашого паролю або того, що хтось буде діяти під вашим обліковим записом.
Якщо ви її ввімкнете, GitHub буде потребувати два різних методи авторизації, отже якщо один з них був зламаний, зловмисник все одно не зможе отримати доступ до вашого облікового запису.

Ви можете знайти опції Двокрокової Авторизації у вкладці Security (безпека) налаштувань вашого облікового запису.

.2FA у вкладці Безпеки
image::images/2fa-1.png[2FA у вкладці Безпеки]

Якщо ви клацнете на кнопку ``Set up two-factor authentication'' (Налаштувати двокрокову авторизацію), ви перейдете на сторінку конфігурації, де ви зможете вибрати використовувати програму для телефону для генерації другого коду (``time based one-time password'' - оснований на часі одноразовий пароль), або GitHub може відправляти вам код через SMS щоразу, коли вам треба ввійти в систему.

Після вибору методу, що вам подобається, та виконання інструкції з налаштування 2FA, ваш обліковий запис буде трохи більш безпечним, та вам доведеться вводити код на додаток до паролю щоразу ви заходите на GitHub.
