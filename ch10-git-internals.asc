[[ch10-git-internals]]
== Git зсередини

Можливо, ви перейшли сюди після одного з перших розділів, а може й після послідовного вивчення всієї книжки до цього місця -- у будь-якому разі, саме тут ми перейдемо до внутрішніх процесів та реалізації Git.
Ми дійшли висновку, що розуміння цієї інформації було принципово важливим для усвідомлення того, наскільки Git є корисним та потужним, та інші сперечалися з нами, кажучи, що це може збивати з пантелику початківців та бути для них надміру складним.
Тому ми зробили це обговорення останнім розділом книги, щоб рано чи пізно ви могли прочитати його під час навчального процесу.
Лишаємо це на ваш розсуд.

А тепер, розпочнімо.
По-перше, якщо це досі не стало зрозумілим, Git -- контентно-адресована (асоціативна) файлова система із надбудовою у вигляді користувацького інтерфейсу СКВ.
За мить ви дізнаєтеся більше про те, що це одначає.

У час раннього становлення Git (переважно до версії 1.5), користувацький інтерфейс був значно складнішим, бо він більше підкреслював цю файлову систему, аніж зручність СКВ.
Протягом останніх кількох років користувацький інтерфейс вдосконалювався і став простим та зрозумілим у використанні; втім, досі зустрічається стереотип щодо раннього інтерфейсу Git, який був складним і тяжким для вивчення.

Шар асоціативної файлової системи неймовірно крутий, тож ми охопимо його першим у цьому розділі; потім ви дізнаєтеся про механізми передачі та завдання з обслуговування репозиторія, з якими вам можете знадобитися коли-небудь мати справу.

include::book/10-git-internals/sections/plumbing-porcelain.asc[]

include::book/10-git-internals/sections/objects.asc[]

include::book/10-git-internals/sections/refs.asc[]

include::book/10-git-internals/sections/packfiles.asc[]

include::book/10-git-internals/sections/refspec.asc[]

include::book/10-git-internals/sections/transfer-protocols.asc[]

include::book/10-git-internals/sections/maintenance.asc[]

include::book/10-git-internals/sections/environment.asc[]

=== Підсумок

Тепер у вас має бути вельми хороше розуміння того що робить Git поза кулісами та, певною мірою, як це реалізовано.
Цей розділ розкрив численні кухонні команди -- команди нижчого рівня та простіші за порцелянові, про які ви дізнавалися у решті книги.
Розуміння того як працює Git на низькому рівні має спростити розуміння чому він робить те, що робить, а також дозволяє створювати власні інструменти та допоміжні скрипти для забезбечення вашого особистого процесу роботи.

Git, як файлова система з адресованим вмістом, -- дуже потужний засіб, який ви легко можете використовувати як СКВ і навіть більше.
Ми сподіваємося ви зможете використовувати здобуті знання про нутрощі Git для реалізації свого власного застосування цієї технології та почувати себе комфортно, користуючись Git просунутими способами.
